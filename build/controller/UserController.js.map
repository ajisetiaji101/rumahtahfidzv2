{"version":3,"file":"UserController.js","names":["_db","_interopRequireDefault","require","_bcrypt","_jsonwebtoken","obj","__esModule","default","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","UserController","exports","req","username","params","respon","knex","raw","data","rows","status","json","error","message","then","e","next","console","log","email","password","body","infouser"],"sources":["../../server/controller/UserController.js"],"sourcesContent":["import knex from \"../config/db.js\";\r\nimport bcrypt from \"bcrypt\";\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nexport default class UserController {\r\n  static getUserById = async (req, res) => {\r\n    try {\r\n      const { username } = req.params;\r\n\r\n      const respon = await knex.raw(\r\n        `select * from mims_userapps.view_get_users where user_name = '${username}'`\r\n      );\r\n      const data = respon.rows;\r\n      return res.status(200).json({ data });\r\n    } catch (error) {\r\n      return res.status(400).json({ data: error.message });\r\n    }\r\n  };\r\n\r\n  static getAllUser = async (req, res) => {\r\n    try {\r\n      const respon = await knex.raw(`call getalluser()`).then((e) => e[0][0]);\r\n      return res.status(200).json({ data: respon });\r\n    } catch (error) {\r\n      return res.status(400).json({ data: error.message });\r\n    }\r\n  };\r\n\r\n  static login = async (req, res, next) => {\r\n    try {\r\n      console.log(\"manggil\");\r\n\r\n      const { email, password } = req.body;\r\n\r\n      console.log(username);\r\n\r\n      const respon = await knex.raw(`select * from users = '${email}'`);\r\n\r\n      const infouser = respon.rows;\r\n\r\n      console.log(\"info\", infouser);\r\n\r\n      res.status(200).json({ data: respon });\r\n\r\n      // const match = await bcrypt.compare(password, infouser[0].password);\r\n\r\n      // if (match) {\r\n      //   const userId = user[0].id;\r\n      //   const name = user[0].name;\r\n      //   const email = user[0].email;\r\n      //   const role = user[0].roleId;\r\n      //   const roleName = user[0].Role.name;\r\n      //   const photo = user[0].photo;\r\n      //   const logotahfidz = user[0].Pondok.Masterpondok.logo;\r\n      //   const pondokId = user[0].pondokId;\r\n      //   const masterpondokId = user[0].Pondok.masterpondokId;\r\n      //   const accessToken = jwt.sign(\r\n      //     {\r\n      //       userId,\r\n      //       name,\r\n      //       email,\r\n      //       role,\r\n      //       photo,\r\n      //       logotahfidz,\r\n      //       roleName,\r\n      //     },\r\n      //     process.env.ACCESS_TOKEN_SECRET,\r\n      //     { expiresIn: \"1d\" }\r\n      //   );\r\n\r\n      //   res.status(200).json({\r\n      //     profile: {\r\n      //       userId,\r\n      //       name,\r\n      //       email,\r\n      //       role,\r\n      //       photo,\r\n      //       logotahfidz,\r\n      //       roleName,\r\n      //     },\r\n      //     token: accessToken,\r\n      //   });\r\n      // } else {\r\n      //   next(error);\r\n      // }\r\n    } catch (error) {\r\n      res.status(404).json({ data: \"User dan Password Salah\" });\r\n    }\r\n  };\r\n}\r\n"],"mappings":"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"}